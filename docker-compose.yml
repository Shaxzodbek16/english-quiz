services:
  redis:
    image: redis:7-alpine
    container_name: redis-english-quiz
    ports:
      - "6379:6379"
    networks:
      - app-network


  postgres:
    image: postgres:17-alpine
    container_name: postgres-english-quiz
    restart: on-failure
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - app-network


  rabbitmq:
    container_name: rabbitmq-english-quiz
    image: rabbitmq:3.13.0-management
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - app-network


  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    depends_on:
      - postgres
      - redis
      - rabbitmq
    volumes:
      - ./backend:/app
    working_dir: /app
    command: >
      sh -c "./run.sh & ./bot.sh & wait"
    networks:
      - app-network

  celery:
    container_name: celery-english-quiz
    build:
      context: ./backend
      dockerfile: Dockerfile
    depends_on:
      - backend
      - redis
      - rabbitmq
    volumes:
      - ./backend:/app
    working_dir: /app
    command: >
      celery -A app.server.celery_worker worker --loglevel=info --pool=solo
    networks:
      - app-network


#  frontend:
#    build:
#      context: ./frontend
#      dockerfile: Dockerfile
#    ports:
#      - "3000:3000"
#    depends_on:
#      - backend
#    volumes:
#      - ./frontend:/app
#      - /app/node_modules
#    working_dir: /app
#    networks:
#      - app-network

volumes:
  postgres-data:

networks:
  app-network:
    driver: bridge
